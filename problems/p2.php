<?php

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous 
 * two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed 
 * four million, find the sum of the even-valued terms.
 * 
 * So basically what we want to do is loop through 1-1000 first for 3s, and then
 * for 5s and add those to two, and then compare the two so we don't get double 
 * values.
 */

include '../support_funs.php';
$problemNumber = 2;
$probDesc = "<p>Each new term in the Fibonacci sequence is generated by adding the previous ";
$probDesc .= " two terms. By starting with 1 and 2, the first 10 terms will be: </p>";
$probDesc .= "<p>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>";
$probDesc .= "<p>By considering the terms in the Fibonacci sequence whose values";
$probDesc .= " do not exceed four million, find the sum of the even-valued terms.</p>";

headerFun();
print_r($divContent);

eulerDescription();

    print_r($divEuler);
    
        problemTwo();
    
    print_r($divClose);

print_r($divClose);
footerFun();

function problemTwo()
{
/* 
 * This problem took teh same approach as the nodes problem did.
*/
    
    $fibSeq = array();
    //I seriously don't want to have to write four million OVER AND OVER AGAIN.
    $x = 1000 * 4000;
    //some initial values
    $total = 0;
    $next = 1;
    $last = 1;
    
    while ($next < $x)
    {
        $hold = $next;
        $next = $next + $last;
        $last = $hold;
        
        if ($next % 2 == 0)
        {
            
            $total += $next;
            
        }
    }
    
    echo '<p>The sum of all of the even values of the Fibonnaci Sequence below four million is <strong>' . $total . '</strong>.</p>';
    
}

?>